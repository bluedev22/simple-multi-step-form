{"version":3,"sources":["css/styles.js","components/FormUserDetails.js","components/FormPersonalDetails.js","components/Confirm.js","components/Success.js","components/MainForm.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","maxWidth","padding","marginRight","marginLeft","marginTop","title","fontSize","formTitle","margin","container","display","flexWrap","textField","spacing","color","borderBottomColor","controlBtns","justifyContent","marginBottom","center","confirmList","backgroundColor","palette","background","paper","button","alignRigth","alignLeft","listText","wordBreak","messageContainer","successMessage","errorMessage","FormUserDetails","handleNextStep","onFieldChange","inputValue","onFieldFocus","onFieldBlur","formErrors","classes","handleChange","e","preventDefault","target","console","log","handleFocus","handleBlur","AppBar","position","className","Typography","variant","align","step","TextField","id","label","type","fullWidth","value","name","error","length","onChange","onFocus","onBlur","aria-describedby","aria-live","email","Button","onClick","FormPersonalDetails","handlePrevStep","formValidate","city","aria-invalid","placeholder","multiline","bio","helperText","Confirm","enteredValues","userInfo","field","push","summaryList","map","info","index","ListItem","key","ListItemText","primary","secondary","List","validate","role","Success","MainForm","state","rest","setState","Object","values","forEach","nextStep","prevStep","fieldChange","fieldFocus","fieldBlur","includes","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57a241ca.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 500,\r\n    padding: 10,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    marginTop: 20\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    fontSize: '1rem'\r\n  },\r\n  formTitle: {\r\n    fontSize: '1.25rem',\r\n    margin: '5px 0'\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    padding: 10\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    maxWidth: 250,\r\n    '& label.Mui-focused': {\r\n      color: '#e72400'\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#e72400'\r\n    },\r\n    '& .MuiFormLabel-root.Mui-error': {\r\n      color: '#e72400'\r\n    }\r\n  },\r\n  controlBtns: {\r\n    maxWidth: 400,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto'\r\n  },\r\n  center: {\r\n    display: 'block',\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto'\r\n  },\r\n  confirmList: {\r\n    maxWidth: 250,\r\n    marginTop: 10,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  alignRigth: {\r\n    marginLeft: 'auto'\r\n  },\r\n  alignLeft: {\r\n    marginRight: 'auto'\r\n  },\r\n  listText: {\r\n    wordBreak: 'break-word'\r\n  },\r\n  messageContainer: {\r\n    marginTop: 16,\r\n    marginBottom: 16\r\n  },\r\n  successMessage: {\r\n    margin: '20px 0'\r\n  },\r\n  errorMessage: {\r\n    color: '#ee0000',\r\n    fontSize: '13px'\r\n  }\r\n}));\r\n","import React, { Fragment } from 'react';\r\nimport { AppBar, Typography, TextField, Button } from '@material-ui/core';\r\nimport { useStyles } from '../css/styles';\r\n\r\nfunction FormUserDetails({\r\n  handleNextStep,\r\n  onFieldChange,\r\n  inputValue,\r\n  onFieldFocus,\r\n  onFieldBlur,\r\n  formErrors\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  // on click, update step state by calling handleNextStep\r\n  const handleNextBtnClick = () => {\r\n    handleNextStep();\r\n  };\r\n\r\n  // on change, pass input value to <MainForm />\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    onFieldChange(e.target);\r\n    console.log(formErrors);\r\n  };\r\n\r\n  const handleFocus = e => {\r\n    onFieldFocus(e.target);\r\n  };\r\n\r\n  const handleBlur = e => {\r\n    onFieldBlur(e.target);\r\n  };\r\n  console.log(formErrors);\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"static\" color=\"primary\" className={classes.root}>\r\n        <Typography variant=\"h1\" className={classes.formTitle} align=\"center\">\r\n          Enter User Details <span>(Step {inputValue.step} of 3)</span>\r\n        </Typography>\r\n      </AppBar>\r\n\r\n      <TextField\r\n        id=\"name\"\r\n        label=\"Name\"\r\n        type=\"text\"\r\n        margin=\"normal\"\r\n        className={`${classes.center} ${classes.textField}`}\r\n        fullWidth={true}\r\n        value={inputValue.name}\r\n        error={formErrors.name.length > 0 ? true : false}\r\n        onChange={handleChange}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        aria-describedby=\"name-error\"\r\n      />\r\n      {formErrors.name.length > 0 && (\r\n        <Typography\r\n          variant=\"body2\"\r\n          className={`${classes.title} ${classes.errorMessage}`}\r\n          align=\"center\"\r\n          id=\"name-error\"\r\n          aria-live=\"assertive\"\r\n        >\r\n          Error: name require {formErrors.name}\r\n        </Typography>\r\n      )}\r\n\r\n      <TextField\r\n        id=\"email\"\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        margin=\"normal\"\r\n        className={`${classes.center} ${classes.textField}`}\r\n        fullWidth={true}\r\n        value={inputValue.email}\r\n        error={formErrors.email.length > 0 ? true : false}\r\n        onChange={handleChange}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        aria-describedby=\"email-error\"\r\n      />\r\n\r\n      {formErrors.email.length > 0 && (\r\n        <Typography\r\n          variant=\"body2\"\r\n          className={`${classes.title} ${classes.errorMessage}`}\r\n          align=\"center\"\r\n          id=\"email-error\"\r\n          aria-live=\"assertive\"\r\n        >\r\n          Error: email require {formErrors.email}\r\n        </Typography>\r\n      )}\r\n\r\n      <div className={classes.controlBtns}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={`${classes.button} ${classes.alignRigth}`}\r\n          onClick={handleNextBtnClick}\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default FormUserDetails;\r\n","import React, { Fragment } from 'react';\r\nimport { AppBar, Typography, TextField, Button } from '@material-ui/core';\r\nimport { useStyles } from '../css/styles';\r\n\r\nfunction FormPersonalDetails({\r\n  handleNextStep,\r\n  handlePrevStep,\r\n  onFieldChange,\r\n  inputValue,\r\n  onFieldFocus,\r\n  onFieldBlur,\r\n  formErrors,\r\n  formValidate\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  // on click, update step state by calling handleNextStep\r\n  const handleNextBtnClick = () => {\r\n    handleNextStep();\r\n    formValidate(inputValue);\r\n  };\r\n\r\n  const handlePrevBtnClick = () => {\r\n    handlePrevStep();\r\n  };\r\n\r\n  // on change, pass input value to <MainForm />\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    onFieldChange(e.target);\r\n  };\r\n\r\n  const handleFocus = e => {\r\n    onFieldFocus(e.target);\r\n  };\r\n\r\n  const handleBlur = e => {\r\n    onFieldBlur(e.target);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"static\" color=\"primary\" className={classes.root}>\r\n        <Typography variant=\"h1\" className={classes.formTitle} align=\"center\">\r\n          Enter Personal Details <span>(Step {inputValue.step} of 3)</span>\r\n        </Typography>\r\n      </AppBar>\r\n\r\n      <TextField\r\n        id=\"city\"\r\n        label=\"City\"\r\n        margin=\"normal\"\r\n        className={`${classes.center} ${classes.textField}`}\r\n        fullWidth={true}\r\n        value={inputValue.city}\r\n        error={formErrors.city.length > 0 ? true : false}\r\n        onChange={handleChange}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        aria-describedby=\"city-error\"\r\n        aria-invalid=\"false\"\r\n      />\r\n\r\n      {formErrors.city.length > 0 && (\r\n        <Typography\r\n          variant=\"body2\"\r\n          className={`${classes.title} ${classes.errorMessage}`}\r\n          align=\"center\"\r\n          id=\"city-erro\"\r\n          aria-live=\"assertive\"\r\n        >\r\n          Error: city require {formErrors.city}\r\n        </Typography>\r\n      )}\r\n\r\n      <TextField\r\n        id=\"bio\"\r\n        label=\"Bio\"\r\n        placeholder=\"Placeholder\"\r\n        multiline\r\n        className={`${classes.center} ${classes.textField}`}\r\n        fullWidth={true}\r\n        margin=\"normal\"\r\n        value={inputValue.bio}\r\n        helperText={`character Numbers ${inputValue.bio.length}`}\r\n        error={formErrors.bio.length > 0 ? true : false}\r\n        onChange={handleChange}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        aria-describedby=\"bio-error\"\r\n        aria-invalid=\"false\"\r\n      />\r\n\r\n      {formErrors.bio.length > 0 && (\r\n        <Typography\r\n          variant=\"body2\"\r\n          className={`${classes.title} ${classes.errorMessage}`}\r\n          align=\"center\"\r\n          id=\"bio-error\"\r\n          aria-live=\"assertive\"\r\n        >\r\n          Error: bio character Numbers {inputValue.bio.length} and {formErrors.bio}\r\n        </Typography>\r\n      )}\r\n\r\n      <div className={classes.controlBtns}>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={`${classes.button} ${classes.alignLeft}`}\r\n          onClick={handlePrevBtnClick}\r\n        >\r\n          Back\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={`${classes.button} ${classes.alignRigth}`}\r\n          onClick={handleNextBtnClick}\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default FormPersonalDetails;\r\n","import React, { Fragment } from 'react';\r\nimport { AppBar, Typography, List, ListItemText, Button } from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { useStyles } from '../css/styles';\r\n\r\nfunction Confirm({ handleNextStep, handlePrevStep, enteredValues, inputValue }) {\r\n  const classes = useStyles();\r\n\r\n  const userInfo = [];\r\n  for (let field in enteredValues) {\r\n    userInfo.push(field);\r\n  }\r\n  const summaryList = userInfo.map((info, index) => {\r\n    return (\r\n      <ListItem key={index}>\r\n        <ListItemText className=\"listText\" primary={info} secondary={enteredValues[info]} />\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n  console.log(userInfo);\r\n\r\n  // on click, update step state by calling handleNextStep\r\n  const handleNextBtnClick = e => {\r\n    e.preventDefault();\r\n    // process form\r\n    // send your data to your API (flux, python php)\r\n\r\n    if (inputValue.validate) {\r\n      handleNextStep();\r\n    }\r\n  };\r\n\r\n  const handlePrevBtnClick = () => {\r\n    handlePrevStep();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"static\" color=\"primary\" className={classes.root}>\r\n        <Typography variant=\"h1\" className={classes.formTitle} align=\"center\">\r\n          Confirm <span>(Step {inputValue.step} of 3)</span>\r\n        </Typography>\r\n      </AppBar>\r\n\r\n      <div className={`${classes.center} ${classes.confirmList}`}>\r\n        <List>{summaryList}</List>\r\n        {/* <List>{generate(<ListItem>{listSummary}</ListItem>)}</List> */}\r\n      </div>\r\n      {inputValue.validate === false && (\r\n        <div className={classes.messageContainer}>\r\n          <Typography\r\n            variant=\"h2\"\r\n            className={`${classes.title} ${classes.errorMessage}`}\r\n            align=\"center\"\r\n            role=\"alert\"\r\n          >\r\n            Errors! - There are errors in this form, please go back to fix them\r\n          </Typography>\r\n        </div>\r\n      )}\r\n      <div className={classes.controlBtns}>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={`${classes.button} ${classes.alignLeft}`}\r\n          onClick={handlePrevBtnClick}\r\n        >\r\n          Back\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          className={`${classes.button} ${classes.alignRigth}`}\r\n          onClick={handleNextBtnClick}\r\n        >\r\n          Confirm & Next\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Confirm;\r\n// export { Confirm as default };\r\n","import React, { Fragment } from 'react';\r\nimport { AppBar, Typography } from '@material-ui/core';\r\nimport { useStyles } from '../css/styles';\r\n\r\nfunction Success() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"static\" color=\"primary\" className={classes.root}>\r\n        <Typography variant=\"h1\" className={classes.formTitle} align=\"center\">\r\n          Success <span>(Finished)</span>\r\n        </Typography>\r\n      </AppBar>\r\n      <div className={classes.messageContainer}>\r\n        <Typography\r\n          variant=\"h2\"\r\n          className={`${classes.title} ${classes.successMessage}`}\r\n          align=\"center\"\r\n        >\r\n          Thank you for your submission!\r\n        </Typography>\r\n        <Typography variant=\"h2\" className={classes.title} align=\"center\">\r\n          you will get an email with further instructions\r\n        </Typography>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import React, { Component } from 'react';\r\nimport FormUserDetails from './FormUserDetails';\r\nimport FormPersonalDetails from './FormPersonalDetails';\r\nimport Confirm from './Confirm';\r\nimport Success from './Success';\r\n\r\n// using validation outside state isn't optimal because we are putting the validation logic into render method,\r\n//  which will turn the method into spaghetti real fast when we are validating lots of data.\r\n// It also run even before we do anything with the textbox.\r\n// That's not good.\r\n// const formErrors = {\r\n//   name: '',\r\n//   email: '',\r\n//   city: '',\r\n//   bio: ''\r\n// };\r\n\r\nclass MainForm extends Component {\r\n  state = {\r\n    step: 1,\r\n    name: '',\r\n    email: '',\r\n    city: '',\r\n    bio: '',\r\n    formErrors: {\r\n      name: '',\r\n      email: '',\r\n      city: '',\r\n      bio: ''\r\n    },\r\n    validate: true\r\n  };\r\n\r\n  formValidate = ({ formErrors, validate, step, ...rest }) => {\r\n    console.log(formErrors, validate, step);\r\n    console.log(rest, 'tesssst');\r\n    this.setState({ validate: true });\r\n\r\n    Object.values(rest).forEach(value => {\r\n      if (value === '') {\r\n        this.setState({ validate: false });\r\n      }\r\n    });\r\n\r\n    Object.values(formErrors).forEach(value => {\r\n      if (value.length > 0) {\r\n        this.setState({ validate: false });\r\n      }\r\n    });\r\n\r\n    console.log(':( :(');\r\n  };\r\n\r\n  // go to next step\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({ step: step + 1 });\r\n  };\r\n\r\n  // go to previous step\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({ step: step - 1 });\r\n  };\r\n\r\n  // update state due to user inputs\r\n  fieldChange = target => {\r\n    this.setState({ [target.id]: target.value });\r\n  };\r\n\r\n  // hides the error message (on blur it will be checked again)\r\n  fieldFocus = target => {\r\n    // update nested react nested state properties\r\n    let formErrors = { ...this.state.formErrors };\r\n    formErrors[target.id] = '';\r\n\r\n    this.setState({ formErrors });\r\n    // or using\r\n    // this.setState(state => (state.formErrors[target.id] = ''));\r\n  };\r\n\r\n  // checks if the field is valid, and if not – shows an error\r\n  fieldBlur = target => {\r\n    let formErrors = { ...this.state.formErrors };\r\n    switch (target.id) {\r\n      case 'name':\r\n        formErrors[target.id] = target.value.length < 3 ? 'minimum 3 characaters required' : '';\r\n\r\n        break;\r\n      case 'email':\r\n        formErrors[target.id] = !target.value.includes('@') ? 'contain @ required' : '';\r\n        break;\r\n      case 'city':\r\n        formErrors[target.id] = target.value.length < 3 ? 'minimum 3 characaters required' : '';\r\n        break;\r\n      case 'bio':\r\n        formErrors[target.id] = 250 <= target.value.length ? 'maximum 250 character required' : '';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ formErrors });\r\n  };\r\n\r\n  render() {\r\n    const { step, name, email, city, bio } = this.state;\r\n\r\n    // to store user inputs to use in <Confirm />\r\n    const enteredValues = { name, email, city, bio };\r\n\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <FormUserDetails\r\n            handleNextStep={this.nextStep}\r\n            onFieldChange={this.fieldChange}\r\n            inputValue={this.state}\r\n            onFieldFocus={this.fieldFocus}\r\n            onFieldBlur={this.fieldBlur}\r\n            formErrors={this.state.formErrors}\r\n          />\r\n        );\r\n\r\n      case 2:\r\n        return (\r\n          <FormPersonalDetails\r\n            handleNextStep={this.nextStep}\r\n            handlePrevStep={this.prevStep}\r\n            onFieldChange={this.fieldChange}\r\n            inputValue={this.state}\r\n            onFieldFocus={this.fieldFocus}\r\n            onFieldBlur={this.fieldBlur}\r\n            formErrors={this.state.formErrors}\r\n            formValidate={this.formValidate}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <Confirm\r\n            handleNextStep={this.nextStep}\r\n            handlePrevStep={this.prevStep}\r\n            enteredValues={enteredValues}\r\n            inputValue={this.state}\r\n          />\r\n        );\r\n      case 4:\r\n        return <Success />;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MainForm;\r\n","import React from 'react';\nimport './App.css';\nimport MainForm from './components/MainForm';\n\nfunction App() {\n  return <MainForm />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}